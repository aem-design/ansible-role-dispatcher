# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  configuration: debug
  ROLE_META: "meta/main.yml"

steps:
- checkout: self  # self represents the repo where the initial Pipelines YAML file was found
  path: "ansible-role-dispatcher"
  displayName: 'checkout'
- bash: |
    # Read role from meta.yml and replace '-' with '_' to be Ansible friendly
    ROLE_REPO_NAME=$(grep "role_name:" ${ROLE_META} | sed -e "s/.*role_name.* \(.*\)/\1/")
    ROLE_NAME=$(grep "role_name:" ${ROLE_META} | sed -e "s/.*role_name.* \(.*\)/\1/" | sed "s/-/_/g")
    ROLE_NAMESPACE=$(grep "company:" ${ROLE_META} | sed -e "s/.*company.* \(.*\)/\1/" | sed "s/\./_/g")
    ROLE_NAME_FULL=$ROLE_NAMESPACE.$ROLE_NAME
      # Store Ansible friendly role name to use in molecule.yml
    echo "##vso[task.setvariable variable=ROLE_REPO_NAME]$ROLE_REPO_NAME"
    echo "##vso[task.setvariable variable=ROLE_NAME]$ROLE_NAME"
    echo "##vso[task.setvariable variable=ROLE_NAMESPACE]$ROLE_NAMESPACE"
    echo "##vso[task.setvariable variable=ROLE_NAME_FULL]$ROLE_NAME_FULL"
  displayName: 'get variables'
- bash: |
    echo "ROLE_REPO_NAME=$ROLE_REPO_NAME"
    echo "ROLE_NAME=$ROLE_NAME"
    echo "ROLE_NAMESPACE=$ROLE_NAMESPACE"
    echo "ROLE_NAME_FULL=$ROLE_NAME_FULL"
  displayName: 'output variables'
- bash: |
    python -v
    pip install wheel
    python setup.py bdist_wheel
    pip install testinfra molecule docker
  displayName: 'install pip dependecies'
- bash: |
    cd ../
    mv ansible-role-$ROLE_REPO_NAME $ROLE_NAME_FULL
    cd $ROLE_NAME_FULL
    molecule test
  displayName: 'rename role to match galaxy convention and run molecule'
