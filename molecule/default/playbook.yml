---
- name: Converge
  hosts: instance
  become: true
  vars:
    local_role_name: "ansible-role-dispatcher"
    role_name: "{% if lookup('env','ROLE_NAME_FULL') %}{{ lookup('env','ROLE_NAME_FULL') }}{% else %}{{ local_role_name }}{% endif %}"
    test_container_name: "{{ local_role_name }}-test"
    test_aem_page_content: "AEM Sign In"
    test_aem_port: "{{ service_aem_port }}"
    test_dispatcher_port: "9080"
    test_dispatcher_port_https: "9081"
    test_aem_page_url: "/libs/granite/core/content/login.html"
    test_aem_page_content_url: "/content/aemdesign-showcase/au/en/component/details/generic-details.html"
    test_aem_page_content_test: "Generic Details"
    test_aem_page_content_cache_test: "/data/httpd/cache{{ test_aem_page_content_url }}"
    test_docker_host: "unix://tmp/docker.sock"

  pre_tasks:
    - name: get docker host ip
      become: true
      shell: |
        set -o pipefail
        /sbin/ip route | awk '/default/ { print $3 }'
      args:
        executable: /bin/bash
      register: dockerhost_ip
      changed_when: false
    - name: set aem license
      import_role:
        name: "aem_design.aem_license"
      vars:
        aem_license_key: "{{ service_aem_license_key }}"
        aem_license_name: "{{ service_aem_license_name }}"
        aem_port: "{{ test_aem_port }}"
        aem_host: "{{ dockerhost_ip.stdout }}"
        wait_delay: 30
        debug_hide: false
    - name: verify aem is ready
      import_role:
        name: "aem_design.aem_verify"
      vars:
        aem_port: "{{ test_aem_port }}"
        aem_host: "{{ dockerhost_ip.stdout }}"
        debug_hide: false
    - name: set permissions for vanityUrls
      import_role:
        name: aem_design.aem_content
      vars:
        aem_port: "{{ test_aem_port }}"
        aem_host: "{{ dockerhost_ip.stdout }}"
        aem_content_action: "set_permission"
        aem_content_list:
          - {
            user_or_group_name: 'everyone',
            path: '/libs/granite/dispatcher/content/vanityUrls',
            permissions: 'read:true'
          }
        debug_hide: false

  tasks:
    - name: start disaptcher
      import_role:
        name: "{{ role_name }}"
      vars:
        docker_host: "{{ test_docker_host }}"
        renderer_port: "{{ test_aem_port }}"
        renderer_host: "{{ dockerhost_ip.stdout }}"
        dispatcher_config: "publish"
        dispatcher_loglevel: "4"
        docker_container_name: "{{ test_container_name }}"
        dispatcher_port: "{{ test_dispatcher_port }}"
        dispatcher_https_port: "{{ test_dispatcher_port_https }}"
        docker_volumes: []
        debug_hide: false

  post_tasks:
    - name: wait until dispatcher return value from aem {{ role_comment }}
      uri:
        url: "http://{{ dockerhost_ip.stdout }}:{{ test_dispatcher_port }}{{ test_aem_page_url }}"
        follow_redirects: "all"
        return_content: true
        timeout: 300
      register: aem_page
      until: test_aem_page_content in aem_page.content
      delay: "{{ wait_delay | default(5) }}"
      retries: 360
    - name: get sample content page from dispatcher {{ role_comment }}
      uri:
        url: "http://{{ dockerhost_ip.stdout }}:{{ test_dispatcher_port }}{{ test_aem_page_content_url }}"
        follow_redirects: "all"
        return_content: true
        timeout: 300
      register: aem_content_page
      until: test_aem_page_content_test in aem_content_page.content
      delay: "{{ wait_delay | default(5) }}"
      retries: 360
