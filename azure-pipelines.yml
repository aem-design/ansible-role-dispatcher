---

trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: ROLE_META
    value: "meta/main.yml"
  - name: PYTHON_VERSION
    value: "3.6"
  - group: variables-aem

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(PYTHON_VERSION)'
    displayName: 'Use Python $(PYTHON_VERSION)'
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    path: "ansible-role-dispatcher"
    displayName: 'checkout'
  - bash: |
      # Read role from meta.yml and replace '-' with '_' to be Ansible friendly
      ROLE_REPO_NAME=$(grep "role_name:" ${ROLE_META} | sed -e "s/.*role_name.* \(.*\)/\1/")
      ROLE_NAME=$(grep "role_name:" ${ROLE_META} | sed -e "s/.*role_name.* \(.*\)/\1/" | sed "s/-/_/g")
      ROLE_NAMESPACE=$(grep "company:" ${ROLE_META} | sed -e "s/.*company.* \(.*\)/\1/" | sed "s/\./_/g")
      ROLE_NAME_FULL=$ROLE_NAMESPACE.$ROLE_NAME
        # Store Ansible friendly role name to use in molecule.yml
      echo "##vso[task.setvariable variable=ROLE_REPO_NAME]$ROLE_REPO_NAME"
      echo "##vso[task.setvariable variable=ROLE_NAME]$ROLE_NAME"
      echo "##vso[task.setvariable variable=ROLE_NAMESPACE]$ROLE_NAMESPACE"
      echo "##vso[task.setvariable variable=ROLE_NAME_FULL]$ROLE_NAME_FULL"
    displayName: 'get variables'
  - bash: |
      echo "ROLE_REPO_NAME=$ROLE_REPO_NAME"
      echo "ROLE_NAME=$ROLE_NAME"
      echo "ROLE_NAMESPACE=$ROLE_NAMESPACE"
      echo "ROLE_NAME_FULL=$ROLE_NAME_FULL"
    displayName: 'output variables'
  - bash: |
      pip install wheel
      python setup.py bdist_wheel
      pip install testinfra molecule docker
    displayName: 'install pip dependecies'
  - bash: |
      echo "AEM_NAME=$secret.AEM_NAME"
      echo "AEM_KEY=$secret.AEM_KEY"
      cd ../
      mv ansible-role-$ROLE_REPO_NAME $ROLE_NAME_FULL
      cd $ROLE_NAME_FULL
      molecule test
    displayName: 'run molecule'
