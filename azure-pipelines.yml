# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  configuration: debug
  ROLE_META: "meta/main.yml"

steps:
- bash: |
    # Read role from meta.yml and replace '-' with '_' to be Ansible friendly
    echo "$ROLE_META"
    ROLE_REPO_NAME=$(grep "role_name:" ${ROLE_META} | sed -e "s/.*role_name.* \(.*\)/\1/")
    ROLE_NAME=$(grep "role_name:" ${ROLE_META} | sed -e "s/.*role_name.* \(.*\)/\1/" | sed "s/-/_/g")
    ROLE_NAMESPACE=$(grep "company:" ${ROLE_META} | sed -e "s/.*company.* \(.*\)/\1/" | sed "s/\./_/g")
    ROLE_NAME_FULL=$ROLE_NAMESPACE.$ROLE_NAME
      # Store Ansible friendly role name to use in molecule.yml
    echo "##vso[task.setvariable variable=ROLE_REPO_NAME]$ROLE_REPO_NAME"
    echo "##vso[task.setvariable variable=ROLE_NAME]$ROLE_NAME"
    echo "##vso[task.setvariable variable=ROLE_NAMESPACE]$ROLE_NAMESPACE"
    echo "##vso[task.setvariable variable=ROLE_NAME_FULL]$ROLE_NAME_FULL"
  name: setvarStep
  displayName: 'get variables'
- bash: |
    echo "ROLE_REPO_NAME=$ROLE_REPO_NAME"
    echo "ROLE_NAME=$ROLE_NAME"
    echo "ROLE_NAMESPACE=$ROLE_NAMESPACE"
    echo "ROLE_NAME_FULL=$ROLE_NAME_FULL"
  displayName: 'output variables'
# - bash: |
#     pip install testinfra molecule docker
#   displayName: 'install pip dependecies'
# - bash: |
#     cd ../
#     mv ansible-role-$(ROLE_REPO_NAME) $(ROLE_NAME_FULL)
#     cd $(ROLE_NAME_FULL)
#   displayName: 'rename role to match galaxy convention'
# - bash: |
#     molecule test
#   displayName: 'run molecule'

# jobs:
# - job: runmolecule
#   variables:
#     ROLE_META: "meta/main.yml"
#   steps:
#     - bash: |
#         echo '##vso[task.setvariable variable=ROLE_REPO_NAME]$(grep "role_name:" ${ROLE_META} | sed -e "s/.*role_name.* \(.*\)/\1/")'
#         echo '##vso[task.setvariable variable=ROLE_REPO_NAME]$(grep "role_name:" ${ROLE_META} | sed -e "s/.*role_name.* \(.*\)/\1/")
#         echo '##vso[task.setvariable variable=ROLE_NAME]$(grep "role_name:" ${ROLE_META} | sed -e "s/.*role_name.* \(.*\)/\1/" | sed "s/-/_/g")
#         echo '##vso[task.setvariable variable=ROLE_NAMESPACE]$(grep "company:" ${ROLE_META} | sed -e "s/.*company.* \(.*\)/\1/" | sed "s/\./_/g")
#         echo '##vso[task.setvariable variable=ROLE_NAME_FULL]"$ROLE_NAMESPACE.$ROLE_NAME"
#       name: variables
#       displayName: 'set variables'
#     - bash: |
#         echo ROLE_REPO_NAME=${variables.ROLE_REPO_NAME}
#         echo ROLE_NAME=${variables.ROLE_NAME}
#         echo ROLE_NAMESPACE=${variables.ROLE_NAMESPACE}
#         echo ROLE_NAME_FULL=${variables.ROLE_NAME_FULL}
#       displayName: 'output variables'

# steps:
# - task: UsePythonVersion@0
#   inputs:
#     versionSpec: '3.6'
# - bash: |
#     echo "##vso[task.setvariable variable=ROLE_REPO_NAME;isOutput=true]$(grep "role_name:" ${ROLE_META} | sed -e "s/.*role_name.* \(.*\)/\1/")"
#     #export ROLE_REPO_NAME=$(grep "role_name:" ${ROLE_META} | sed -e "s/.*role_name.* \(.*\)/\1/")
#     #export ROLE_NAME=$(grep "role_name:" ${ROLE_META} | sed -e "s/.*role_name.* \(.*\)/\1/" | sed "s/-/_/g")
#     #export ROLE_NAMESPACE=$(grep "company:" ${ROLE_META} | sed -e "s/.*company.* \(.*\)/\1/" | sed "s/\./_/g")
#     #export ROLE_NAME_FULL="$ROLE_NAMESPACE.$ROLE_NAME"
#     echo ROLE_REPO_NAME=${ROLE_REPO_NAME}
#     #echo ROLE_NAME=${ROLE_NAME}
#     #echo ROLE_NAMESPACE=${ROLE_NAMESPACE}
#     #echo ROLE_NAME_FULL=${ROLE_NAME_FULL}
#   displayName: 'set variables'

# # - bash: |
# #     pip install testinfra molecule docker
# #   displayName: 'install dependecies'

# # - bash: |
# #     cd ../
# #     mv ansible-role-$ROLE_REPO_NAME $ROLE_NAME_FULL
# #     cd $ROLE_NAME_FULL
# #   displayName: 'rename role to match galaxy'

# # - bash: |
# #     molecule test
# #   displayName: 'run molecule'

